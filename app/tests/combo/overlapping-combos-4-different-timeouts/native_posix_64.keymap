#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/kscan_mock.h>

/*

TO RUN THE TEST:
1. Go to app/
2. Run: 
    ./run-test.sh tests/combo/overlapping-combos-4-different-timeouts


TO DEBUG THE TEST:
1. IMPORTANT: Run the test first!
2. (optional) Put breakpoints
3. Go on the 'Run and Debug' tab in VS Code
4. Launch: "Run/Debug: tests/combo/overlapping-combos-4-different-timeouts"

 */

#define kA 0
#define kB 1
#define kC 2
#define kD 3

/ {
    combos {
        compatible = "zmk,combos";

        combo_short {
            timeout-ms = <30>;
            key-positions = <kA kB>;
            bindings = <&kp S>;
        };

        combo_long {
            timeout-ms = <100>;
            key-positions = <kA kC>;
            bindings = <&kp L>;
        };

    };

    keymap {
        compatible = "zmk,keymap";
        label ="Default keymap";

        default_layer {
            bindings = <
                &kp A &kp B
                &kp C &kp D
            >;
        };
    };
};

#define press_A_and_wait(delay_next) \
    ZMK_MOCK_PRESS(0,0,delay_next)
#define press_B_and_wait(delay_next) \
    ZMK_MOCK_PRESS(0,1,delay_next)
#define press_C_and_wait(delay_next) \
    ZMK_MOCK_PRESS(1,0,delay_next)
#define press_D_and_wait(delay_next) \
    ZMK_MOCK_PRESS(1,1,delay_next)

#define release_A_and_wait(delay_next) \
    ZMK_MOCK_RELEASE(0,0,delay_next)
#define release_D_and_wait(delay_next) \
    ZMK_MOCK_RELEASE(1,1,delay_next)
 
&kscan {
    events = <

        /*
        Expected output:
        ----------------
        - T+50: Key 0 (A) is pressed
            - Nothing to see
        - T+80: 'combo_short' expires (press + 30ms) => Nothing happens because we're still waiting to see if 'combo_long' will be matched
            - Nothing to see
        - T+100: Key 4 (D) is pressed and released
            - We should see: 'position 4 keycode 0x70007'
        - T+150: 'combo_long' expires (press + 100ms) => Both combos expired, now we're sending the KEY_PRESS binding
            - We should see: 'position 0 keycode 0x70004' 
        - T+200: Key 0 (A) is released
            - Nothing to see
        - T+220: Key 4 (D) is pressed and released
            - We should see: 'position 4 keycode 0x70007' 


        We don't have access to the timings in the snapshot, so this order allows to test timeouts based on the sequence on keycode sent.
        If everything works as expected, we should send: D, A, D.

        Current problem: ❌
        ----------------
        At the moment there's a bug where whenever the shortest combo expires, we stop waiting for other candidates. With that buggy behavior
        zmk will send instead: A, D, D. Because the expiry of 'combo_short' will output A before the first D.
        */


        /* Note: This starts at T+50 because the ZMK_MOCK_PRESS seems to launch the first event at T+(first wait duration). So in our case T+50 */

        /* T+50+0=    T+50: Press A and wait 50ms */
        press_A_and_wait(50)

        /* T+50+30=   T+80: 'combo_short' should expire */

        /* T+50+50=  T+100: Press D and release 10ms later */
        press_D_and_wait(10)
        release_D_and_wait(90)

        /* T+50+100= T+150: 'combo_long' should expire */

        /* T+50+150= T+200: Release A */
        release_A_and_wait(20)

        /* T+50+170=  T+220: Press D and release 10ms later */
        press_D_and_wait(10)
        release_D_and_wait(0)
    >;
};